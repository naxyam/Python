Lo primero sería definir la estructura grafica del proyecto (definir las vistas que tendrá)

Primero crear el proyecto desde el cmd
Luego crear el app dentro del proyecto:
python manage.py startapp nombre

se prende el servidor y se prueba con localhost si el servidor funciona.

Luego se construyen las vistas y las URL's
Esto se hace en el archivo views y en el archivo url's.

En el archivo views se importa HttpResponse y crear tantas vistas como urls tenga el sitio.

Inicialmente se crea returnando el HttpResponse, pero la idea es que renderice los html que haya en las plantillas.


Luego nos vamos al archivo urls e importamos las views

Luego creamos las urls en el urlpatterns, tantas urls como htmls tenga el sitio.


Ahora organizar las URL's

Si tenemos varios proyectos puede ser complicado tantas urls en el urlpatters, por lo cual lo mejor es crear un archivo url's para cada aplicación quue tenga el proyecto y así las urls quedan mas organizadas.

En el archivo urls de la app importamos:
from django.urls import include, path

importamos las vistas:
from proyectowebapp import views

copiamos el urlpatters y lo quitamos del archivo urls general y en el urlpatterns de la aplicación quitamos la url de admin.

Ahora enlazamos desde el url del proyecto al urls de la app,
en urlpatters creamos un nuevo path

path('proyectowebapp', include('proyectowebapp.urls')),

(Esto hay que hacerlo para cada app quue tengamos en el proyecto.)

Para no tener que poner el nombre del proyecto despues de localhost para que abra las páginas (el html), en el archivo urls del proyecto quitamos el nombre en el path y dejamos:

path('', include('proyectowebapp.urrls')),


Ahora nos vamos al archivo settings y en las apps instaladas (INSTALLED_APPS) despues de la última línea escribimos el nombre dle proyecto entre comillas:
'proyectowebapp',

Ahora, vamos a crear los templates:

Creamos una carpeta templates y luego creamos una carpeta que tenga el nombbre del app y allì creamos los htmls..

creamos un html por cada parte de la pagina que deseemos crear.

Luego nos vamos al archivo views.py y cambiamos el return de las vistas para que renderice el html:

return render(request, 'nombredelhtml.html')

Una vez verificamos que los htmls ffuncionan correctamente, procedemos a descargar los archivos de bootstrap, creamos una carpeta static en la carpeta principal de la app y allí creamos otra carpeta con el mismo nombre de la app y dentro ponemos las carpetas correspondientes a los archivos de bootstrap, también debemos tener un archivo home con todos los links correspondientes para vincular bootstrap a nuestro proyecto.

Luego organizamos los links de las imagenes, los css y los archivos js para que funcionen con django, agregando

{% static 'nombreproyecto/ruta' %}

Una vez verificamos que todo funciona, procedemos a hacer la herenncia de plantillas.


