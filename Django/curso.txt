
Instruccion para levantar el servidor
python manage.py runserver

Como se usan las plantillas???

1. Creación del objeto de tipo template:

plt = template(doc_externo.read())

2. Creación de contexto
*Datos adicionales para el template(variable, funciones etc)
ctx = Context()

3. Renderizado del objeto Template
llamar al objeto template con la funcion render y pasarle el contexto.

documento = plt.render(ctx)


Jerarquía u orden de llamadas desde plantilla

*Diccionario
*Atributo
*Método
*Índice de lista


**Loaders

A través de un loader podemos cargar todas las plantillas que vamos a usar de una manera mas elegante y sin consumir tantos recursos.
Para trabajar con el loader, primero en views tenemos que importar la clase asi:

from django.template.loader import get_template

Debemos especificar al proyecto cual es la carpeta donde van a estar las plantillas, eso lo hacemos en el archivo settings

Allí hay un directorio, que se llama DIRS: que está vacio y ahí es donde debemos declarar la ruta para las plantillas, quedaría así:

'DIRS': ['C:/Users/Natalia/Documents/Django/miProject/miProject/plantillas'], poniendo logicamente la ruta correcta para el proyecto.

Para cargar la plantilla externa, nos vamos al archivo views y ponemos el siguiente codigo:

doc_externo = get_template('miplantilla.html')

luego vamos a renderizar asi:

documento = doc_externo.render(ctx) El ctx(contexto) debe ser un diccionario con los clave valor de las variables que estamos usando.

De forma que quedaría asì:

documento= doc_externo.render({'nombre_persona': p1.nombre, 'apellido_persona':p1.apellido, 'momento_actual': ahora, 'temas': temasdelCurso})


**shortcuts

Es una manera de simplificar codigo, en primer lugar debemos importar el módulo de la siguiente forma:

from django.shortcuts import render

ahora para cargar solamente debemos hacer:

en settings cargar la ruta de las plantillas como lo hicimos anteriormente y en views poner el siguiente código:

return render(request, plantilla, diccionario del contexto), 
quedaría así:

return render(request, 'miPlantilla.html', {'nombre_persona': p1.nombre, 'apellido_persona':p1.apellido, 'momento_actual': ahora, 'temas': temasdelCurso})




**plantillas incrustadas: 

Es una plantilla dentro de otra plantilla

Se usa para incluir una página dentro de otra, para los casos en que se necesite crear barras, pie de paginas, menus que se usaran en varias paginas es muy usado.

En primer lugar debes crear la plantilla que vas a insertar en un archivo independiente sería algo como menu.html, luego deberas definir en tu plantilla principal en donde la vas a insertar, arriba, enn la mitad, abajo, en nuestro caso, lado superior, en miPlantilla.html y una vez definido, incluimos esta etiqueta en el lugar que elejimmos, suponiendo que la ruta donde se encuentra el archivo esta dentro de una carpeta que se llama superior.

{% include 'superior/barra.html' %}


**herencia de plantillas:

Podemos crear una plantilla base donde se cargara todo lo que las demas plantillas van a tener como pie de pagina, encabezado,  laterales, titulos etc, de esta forma al cambiar algo en la plantilla general las demas plantillas actualizaran automaticamente, lo que debbemos hacer en este caso es crear la plantilla padre y ubicar las partes que van a cambiar en la plantilla, en estas partes ubicar las etiquetas de la siguiente manera:

{% block title %}{% endblock %} para las la parte que va a cambiar en el titulo

{%block content %}

{% endblock %} para la parte que va a cambiar en la parte de la mitad

encerrada dentro de los bloques va a la información que va a cambiar, también podemos incrustar plantillas como lo hicimos en la clase pasada, ubicando la etiqueta donde queramos:

{% include 'superior/barra.html' %}


En la plantilla hija, debemos poner en el encabezado del documento la siguiente etiqueta:

{% extends 'nombrepadre.html' $}

y poner nuevamente las etiquetas donde va a cambiar el contenido:

{% block title %}aquí va la informmación que va a cambiar{% endblock %}

{% block content %}


aquí va la información que va a cambiar



{% endblock %}

El resto de contenido lo hereda de la plantilla padre.














 